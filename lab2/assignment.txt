due 12/17

write a function that takes a board, a token, and a valid move position and returns a board where the token has been played to the indicated position, including attendant token flips. your code does not mneed to account for being handed an invalid move position and what your code does in case of being an invalid move is up to you (except it shouldn't error).

you should demonstrate this lab by means of a script that takes input as an othello game board (default to starting position), and a token (defaulting to the side that would play next in the absence of any pass moves), and a position. the position may be specified as an integer in range(64) or in a1 style where the fist character is from a-h and the second is from 1-8. case should be ignored for all inputs. 

the output should be two snapshots, a before ans after snapshot. however if no move is given, then only a before snapshot should be displayed. a snapshot is a move (if one was made) followed by a 2d representation of a board, followed by the score, followed by a 1d representation of the board (ie a string), followed by a listing of the possible moves at that point. for the first snaptshot, there is no associated move, but otherwise, a move should be shown in the format 'x plays to 25' or 'o moves to 36'. the move should be given in standard form (ie an integer). the 2d representation should indicate the possible moves with an asterisk in place of a period. A score should look like 'score (x vs o): 28/31', where the first number is the total number of black tokens and the 31 is the total number of white tokens. the listing of possible moves should be in the form of: 'O to move: 24, 15, 7, 63'. There are two special cases that should be addressed. if the game is over (hence, no moves), then there is no final listing of possible moves. You might, instead, replace Score with Final score. Note that final scores need not add up to 64. The other special case is where the resultant board is a pass for the opposite player. In this case, the first player is to go again, and the list of moves should reflect it. 